char *get_command_name(char *);
char *get_time(long);
void addthishost(char *, char *);
void change_owner(char *, char *);
void verify_pass(char *, char *);
void mail_it(char *, char *);
void supporter(char *, char *);
void purpose(char *, char *);
void update_mailinfo(char *, char *, char *, char *, char *, long);
void show_chan_num(char *, char *);
void mailreg(char *, char *);
void delete_auth_chan(char *, char *);
char *get_command_rname(char *);
void showdisabled(char *, char *);
void disablecomm(char *, char *);
void enablecomm(char *, char *);
void change_comm_name(char *, char *);
void change_comm_level(char *, char *);
void list_suspendchan(char *, char *);
void cswall(char *, char *);
void invite(char *, char *);
void kick_all(char *, char *);
void kick_ban_all(char *, char *);
void check_single_ban_time(char *);
char *get_ban_mask(char *);
void nickban(char *, char *);
void unban(char *, char *);
void load_banfiles(char *);
void enforce_ban(char *, char *);
void show_bans(char *, char *);
int add_baninfo(char *, char *, long, int, long , char *, char *, int);
long convert_duration(char *, long);
void add_ban(char *, char *);
int compare(const void *, const void *);
void verify(char *, char *);
extern char *collapse(char *pattern);
extern int mmatch(const char *old_mask, const char *new_mask);
extern int match(const char *ma, const char *na);
extern int mycmp(const char *s1, const char *s2);
extern int myncmp(const char *str1, const char *str2, int n);
void renchan(char *, char *);
void chan_list(char *, char *);
void operlist(char *, char *);
void mode(char *, char *);
void showcommands(char *, char *);
int check_level_help(char *, char *, char *);
int check_level(char *, char *);
void generic(char *, char *);
void csauth(char *, char *);
void csdeauth(char *, char *);
void show_map(char *,char *);
void isregistered(char *, char *);
void last_seen(char *, char *);
void isauthed(char *, char *);
void load_infolines(char *);
void write_all_infolines();
void write_single_infolines(char *);
void char_test(char *, char *);
void info(char *, char *);
void alist(char *, char *);
void suspend(char *, char *);
void admin(char *, char *);
void whois(char *, char *);
void channel_options(char *, char *);
void delete_auth(char *, char *);
void add_authinfo(char *, char *);
void parse_eoburst();
void parse_eob_ack();
void lastseen(char *, char *);
void get_regusers();
void re_op_x();
void reset_all_defs(char *, char *);
void reset_defmodes(char *, char *);
void reset_deftopic(char *, char *);
void reset_all_current_topics();
void reset_all_deftopics();
void set_tlock(char *, char *);
void suspend_channel(char *, char *);
void reset_topic(char *, char *);
void requests(char *, int);
void add_banlist(char *, char *);
char *conv_char(char *);
char *conv_oct(char *);
void opers_invite(char *, char *);
void get_ip(char *, char *);
void get_dns(char *, char *);
void add_modeinfo(char *, char *, char *);
void add_templist(char *);
void parse_create(char *, char *);
void delete_cnode(char *, char *);
void serv_unused(char *);
void serv_used(char , char *);
void delete_usernum(char *);
char *mkpass(char *, char *);
char *whoison(char *);
char *list_bans(char *);
char *list_modes(char *);
char *num2serv(char);
char *nick2num(char *);
char *swap_host(char *);
char *num2nick(char *);
char *get_free_usernum(char *);
char *get_usernum(char *);
char get_free_servnum(char *, char );
int is_serv(char *);
void parse_join(char *, char *);
void parse_ping(char *, char *);
int wwcmp(char *, char *);
int comp(char *, char *, int);
void flood_user(char *, char *);
void parse_join(char *, char *);
void parse_ping(char *, char *);
char *get_free_usernum(char *);
char *get_usernum(char *);
void load_nums();
void parse_007(char *, char *);
void parse_005(char *, char *);
void ctcp_ping(char *, char *);
void ctcp_gender(char *, char *);
void ctcp_version(char *, char *);
void inviteme(char *, char *);
void parse_pong(char *, char *);
void parse_server(char *, char *);
void parse_action(char *, char *);
void parse_kill(char *, char *);
void parse_nick(char *, char *);
void parse_kick(char *, char *);
void parse_privmsg(char *, char *);
void parse_mode(char *, char *);
void parse_pass(char *, char *);
void parse_quit(char *, char *);
void parse_topic(char *, char *);
void parse_squit(char *, char *);
void parse_away(char *, char *);
void parse_367(char *, char *);
void parse_353(char *, char *);
void parse_324(char *, char *);
void parse_332(char *, char *);
void parse_part(char *, char *);
void write_channel_list();
void write_owner_list();
void write_all_files();
void register_channel(char *, char *);
void opregister_channel(char *, char *);
void unregister_channel(char *, char *);
void set_url(char *, char *);
void make_welcome(char *, char *);
void set_welcome(char *, char *);
void set_voice(char *, char *);
void purge_flag(char *, char *);
int check_purge_flag(char *);
void authorize(char *, char *);
void authop(char *, char *);
void dauthorize(char *who, char *rest);
void set_default_topic(char *, char *);
void set_default_modes(char *, char *);
void strip_period(char *);
void del_wild(char *);
void strip_slash(char *);
void strip_bslash(char *);
void delete_channel_node(char *);
int change_password(char *, char *, char *, char *);
void say_text(char *, char *);
void refresh_registered();
void rehash();
void check_channel_purge_time();
void do_action(char *, char *);
void purge_channel(char *);
void admin_purge_channel(char *, char *);
void replace_node(char *, char *);
void write_admnfile();
void topic(char *, char *);
void file_error(char *);
void delete_node(char *);
void delete_snode(char *);
void free_nicklist();
void free_maplist();
void free_modelist();
void set_ownername(char *, char *);
void set_desc(char *, char *);
void set_chmodelvl(char *, char *);
void set_owneremail(char *, char *);
void set_strictop(char *, char *);
void set_noban(char *, char *);
void set_operop(char *, char *);
void set_noops(char *, char *);
void set_stay(char *, char *);
void set_banlevel(char *, char *);
void load_channels();
void clearban(char *, char *);
void masskill(char *, char *);
void send_denied_msg(char *);
void add_userinfo(char *, char *,  int, int, int, int, char *, long);
void add_nickinfo(char *, char *, char *,char *, char *, char *);
void add_regsinfo(char *, long, char *, char *, char *, char *, char *, char *, char *, char *, long, char *, char *, int, int, int, int, int, int, int, int, int, int, int, int, long, int, int, int);
void show_access(char *, char *);
void reinit();
void ban(char *, char *);
void show_uptime(char *, char *);
void load_admlist();
int is_ip(char *);
int is_num(char *);
char *convert_addr(char *);
int bancmp(const char *, const char *);
int bancmp1(const char *, const char *);
int check_chan(char *);
void clearmode(char *, char *);
void deopall(char *, char *);
void opall(char *, char *);
void moderate(char *, char *);
void new_password(char *, char *);
void set_topicnumber();
int set_chaninfo(char *, char *, int);
struct regsinfo *is_registered(char *);
int get_command_level(char *);
struct mailinfo *return_mailinfo(char *);
struct userinfo *return_admninfo(char *);
struct userinfo *ret_admn_nickinfo(char *);
struct userinfo *ret_admn_addrinfo(char *);
struct authinfo *ret_admn_authinfo(char *, char *);
struct authinfo *return_authinfo(char *, char *);
struct userinfo *return_userinfo(char *, char *);
struct userinfo *return_maskinfo(char *, char *);
struct nickinfo *return_nickinfo(char *);
struct userinfo *ret_user_nickinfo(char *, char *);
struct userinfo *ret_user_level(char *, char *);
struct adderinfo *ret_user_addrinfo(char *, char *);
struct userinfo *ret_user_access(char *, char *);
struct userinfo *ret_user_auth(char *, char *, char *);
struct regsinfo *return_regsinfo(char *);
struct nickinfo *return_chaninfo(char *, char *);
int check_access(char *, char *, int, char *);
int ison(char *);
char *getuserhost(char *);
char *getnickuserhost(char *);
int check_flood(char *), find_flood(char *);
void add_to_flood_list(char *), reset_flood();
char strlwr(char *), *strupr(char *);
char translate_esc(char *, char *);
char *date();
char *bottime();
int get_connection(char *, int), readln(), writeln(char *);
int wcmp(char *, char *);
int writelns(int, char *);
int read_from_socket(int, char *);
int send_to_socket(int, char *, ...);
int send_to_server(char *, ...);
void sig_pipe(), sig_bus();
void log(char *, char *, ...), load_cfg();
void command_log(char *, char *, char *);
void parse(char *);
void join_channels();
void join_msgchan();
int reconnect();
void debug(char *, ...);
void set_fds(), sendping();
void strip_newline(char *), reinit_bot(), init_bot(), sig_alrm();
void kick_ban(char *, char *);
void deop(char *, char *);
void die(char *, char *);
void sig_segv();
void trailing_blanks(char *);
void giveop(char *, char *);
int chan_check(char *, char *);
int check(char *, char *);
void join(char *, char *), part(char *, char *);
void do_help(char *, char *);
void help(char *, char *);
void show_chaninfo(char *, char *);
void default_topic(char *);
void show_welcome(char *, char *);
void default_modes(char *);
void kick_user(char *, char *);
void parse_server_msg(fd_set *read_fds);
void free_chaninfo();
void add_user(char *, char *);
void delete_user(char *, char *);
void mod_user(char *, char *);
void mod_addr(char *, char *);
void adm_addr(char *, char *);
void mod_admin(char *, char *);
void add_admin(char *, char *);
void delete_admin(char *, char *);
void set_flood_rate(char *, char *);
void parse_admin(char *, char *);
void parse_stats(char *, char *);
void parse_version(char *, char *);
void parse_burst(char *, char *);
